-- ==========================================
-- AI Prompt Lab Êï∞ÊçÆÂ∫ìÂàùÂßãÂåñËÑöÊú¨
-- ÁâàÊú¨: 1.0
-- Êó•Êúü: 2025-10-27
-- ËØ¥Êòé: ÂåÖÂê´ÊâÄÊúâË°®ÁªìÊûÑ„ÄÅÁ¥¢Âºï„ÄÅÂàùÂßãÊï∞ÊçÆ
-- ==========================================

-- ==========================================
-- 1. Áî®Êà∑Ë°®
-- ==========================================

CREATE TABLE IF NOT EXISTS users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    username VARCHAR(50) NOT NULL UNIQUE,
    email VARCHAR(100) NOT NULL UNIQUE,
    hashed_password VARCHAR(255) NOT NULL,
    full_name VARCHAR(100),
    avatar_url VARCHAR(500),
    role VARCHAR(20) NOT NULL DEFAULT 'user',
    is_active BOOLEAN NOT NULL DEFAULT 1,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX IF NOT EXISTS idx_users_username ON users(username);
CREATE INDEX IF NOT EXISTS idx_users_email ON users(email);
CREATE INDEX IF NOT EXISTS idx_users_role ON users(role);

-- ==========================================
-- 2. Prompt Ë°®
-- ==========================================

CREATE TABLE IF NOT EXISTS prompts (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER NOT NULL,
    title VARCHAR(200) NOT NULL,
    content TEXT NOT NULL,
    description VARCHAR(500),
    tags TEXT,
    is_public BOOLEAN NOT NULL DEFAULT 0,
    version INTEGER NOT NULL DEFAULT 1,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE INDEX IF NOT EXISTS idx_prompts_user_id ON prompts(user_id);
CREATE INDEX IF NOT EXISTS idx_prompts_is_public ON prompts(is_public);
CREATE INDEX IF NOT EXISTS idx_prompts_updated_at ON prompts(updated_at);

-- ==========================================
-- 3. Áî®Êà∑ Prompt Êî∂ËóèË°®
-- ==========================================

CREATE TABLE IF NOT EXISTS user_prompt_favorites (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER NOT NULL,
    prompt_id INTEGER NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (prompt_id) REFERENCES prompts(id) ON DELETE CASCADE,
    UNIQUE(user_id, prompt_id)
);

CREATE INDEX IF NOT EXISTS idx_user_prompt_favorites_user_id ON user_prompt_favorites(user_id);
CREATE INDEX IF NOT EXISTS idx_user_prompt_favorites_prompt_id ON user_prompt_favorites(prompt_id);

-- ==========================================
-- 4. Prompt ÁâàÊú¨ÂéÜÂè≤Ë°®
-- ==========================================

CREATE TABLE IF NOT EXISTS prompt_versions (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    prompt_id INTEGER NOT NULL,
    version INTEGER NOT NULL,
    title VARCHAR(200) NOT NULL,
    content TEXT NOT NULL,
    description VARCHAR(500),
    change_summary VARCHAR(500),
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (prompt_id) REFERENCES prompts(id) ON DELETE CASCADE,
    UNIQUE(prompt_id, version)
);

CREATE INDEX IF NOT EXISTS idx_prompt_versions_prompt_id ON prompt_versions(prompt_id);
CREATE INDEX IF NOT EXISTS idx_prompt_versions_version ON prompt_versions(version);

-- ==========================================
-- 5. AI ÈÖçÁΩÆË°®
-- ==========================================

CREATE TABLE IF NOT EXISTS ai_configs (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER,
    name VARCHAR(100) NOT NULL,
    base_url VARCHAR(500) NOT NULL,
    api_key VARCHAR(500) NOT NULL,
    model VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    is_default BOOLEAN NOT NULL DEFAULT 0,
    is_global BOOLEAN NOT NULL DEFAULT 0,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE INDEX IF NOT EXISTS idx_ai_configs_user_id ON ai_configs(user_id);
CREATE INDEX IF NOT EXISTS idx_ai_configs_is_default ON ai_configs(is_default);
CREATE INDEX IF NOT EXISTS idx_ai_configs_is_global ON ai_configs(is_global);

-- ==========================================
-- 6. A/B ÊµãËØïË°®
-- ==========================================

CREATE TABLE IF NOT EXISTS ab_tests (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER NOT NULL,
    name VARCHAR(200) NOT NULL,
    description TEXT,
    prompt_a_id INTEGER NOT NULL,
    prompt_b_id INTEGER NOT NULL,
    config_a_id INTEGER,
    config_b_id INTEGER,
    test_cases TEXT,
    results TEXT,
    status VARCHAR(20) NOT NULL DEFAULT 'pending',
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (prompt_a_id) REFERENCES prompts(id) ON DELETE CASCADE,
    FOREIGN KEY (prompt_b_id) REFERENCES prompts(id) ON DELETE CASCADE,
    FOREIGN KEY (config_a_id) REFERENCES ai_configs(id) ON DELETE SET NULL,
    FOREIGN KEY (config_b_id) REFERENCES ai_configs(id) ON DELETE SET NULL
);

CREATE INDEX IF NOT EXISTS idx_ab_tests_user_id ON ab_tests(user_id);
CREATE INDEX IF NOT EXISTS idx_ab_tests_status ON ab_tests(status);
CREATE INDEX IF NOT EXISTS idx_ab_tests_created_at ON ab_tests(created_at);

-- ==========================================
-- 7. ÊâßË°åÂéÜÂè≤Ë°®
-- ==========================================

CREATE TABLE IF NOT EXISTS execution_history (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER NOT NULL,
    prompt_id INTEGER,
    prompt_content TEXT NOT NULL,
    variables TEXT,
    ai_config_id INTEGER,
    model VARCHAR(100),
    response TEXT,
    tokens_used INTEGER,
    execution_time REAL,
    status VARCHAR(20) NOT NULL DEFAULT 'success',
    error_message TEXT,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (prompt_id) REFERENCES prompts(id) ON DELETE SET NULL,
    FOREIGN KEY (ai_config_id) REFERENCES ai_configs(id) ON DELETE SET NULL
);

CREATE INDEX IF NOT EXISTS idx_execution_history_user_id ON execution_history(user_id);
CREATE INDEX IF NOT EXISTS idx_execution_history_prompt_id ON execution_history(prompt_id);
CREATE INDEX IF NOT EXISTS idx_execution_history_status ON execution_history(status);
CREATE INDEX IF NOT EXISTS idx_execution_history_created_at ON execution_history(created_at);

-- ==========================================
-- 8. Ë¥®ÈáèËØÑ‰º∞Ë°®
-- ==========================================

CREATE TABLE IF NOT EXISTS quality_evaluations (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    execution_id INTEGER NOT NULL,
    user_id INTEGER NOT NULL,
    rating INTEGER,
    feedback TEXT,
    metrics TEXT,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (execution_id) REFERENCES execution_history(id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE INDEX IF NOT EXISTS idx_quality_evaluations_execution_id ON quality_evaluations(execution_id);
CREATE INDEX IF NOT EXISTS idx_quality_evaluations_user_id ON quality_evaluations(user_id);
CREATE INDEX IF NOT EXISTS idx_quality_evaluations_rating ON quality_evaluations(rating);

-- ==========================================
-- 9. Ê®°ÊùøÂàÜÁ±ªË°®
-- ==========================================

CREATE TABLE IF NOT EXISTS template_categories (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(100) NOT NULL,
    name_en VARCHAR(100),
    description VARCHAR(500),
    icon VARCHAR(50) NOT NULL DEFAULT 'üìÅ',
    parent_id INTEGER,
    sort_order INTEGER NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT 1,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (parent_id) REFERENCES template_categories(id) ON DELETE SET NULL
);

CREATE INDEX IF NOT EXISTS idx_template_categories_parent_id ON template_categories(parent_id);
CREATE INDEX IF NOT EXISTS idx_template_categories_sort_order ON template_categories(sort_order);

-- ==========================================
-- 10. Prompt Ê®°ÊùøË°®
-- ==========================================

CREATE TABLE IF NOT EXISTS prompt_templates (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    category_id INTEGER NOT NULL,
    title VARCHAR(200) NOT NULL,
    description VARCHAR(500),
    content TEXT NOT NULL,
    variables TEXT,
    example_input TEXT,
    example_output TEXT,
    tags TEXT,
    difficulty VARCHAR(20) NOT NULL DEFAULT 'beginner',
    use_count INTEGER NOT NULL DEFAULT 0,
    favorite_count INTEGER NOT NULL DEFAULT 0,
    rating REAL NOT NULL DEFAULT 0.0,
    rating_count INTEGER NOT NULL DEFAULT 0,
    author_id INTEGER,
    is_official BOOLEAN NOT NULL DEFAULT 1,
    is_active BOOLEAN NOT NULL DEFAULT 1,
    is_featured BOOLEAN NOT NULL DEFAULT 0,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (category_id) REFERENCES template_categories(id) ON DELETE CASCADE,
    FOREIGN KEY (author_id) REFERENCES users(id) ON DELETE SET NULL
);

CREATE INDEX IF NOT EXISTS idx_prompt_templates_category_id ON prompt_templates(category_id);
CREATE INDEX IF NOT EXISTS idx_prompt_templates_difficulty ON prompt_templates(difficulty);
CREATE INDEX IF NOT EXISTS idx_prompt_templates_is_featured ON prompt_templates(is_featured);
CREATE INDEX IF NOT EXISTS idx_prompt_templates_use_count ON prompt_templates(use_count);

-- ==========================================
-- 11. Áî®Êà∑Ê®°ÊùøÊî∂ËóèË°®
-- ==========================================

CREATE TABLE IF NOT EXISTS user_template_favorites (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER NOT NULL,
    template_id INTEGER NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (template_id) REFERENCES prompt_templates(id) ON DELETE CASCADE,
    UNIQUE(user_id, template_id)
);

CREATE INDEX IF NOT EXISTS idx_user_template_favorites_user_id ON user_template_favorites(user_id);
CREATE INDEX IF NOT EXISTS idx_user_template_favorites_template_id ON user_template_favorites(template_id);

-- ==========================================
-- 12. Ê®°ÊùøËØÑÂàÜË°®
-- ==========================================

CREATE TABLE IF NOT EXISTS template_ratings (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER NOT NULL,
    template_id INTEGER NOT NULL,
    rating INTEGER NOT NULL CHECK (rating >= 1 AND rating <= 5),
    comment TEXT,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (template_id) REFERENCES prompt_templates(id) ON DELETE CASCADE,
    UNIQUE(user_id, template_id)
);

CREATE INDEX IF NOT EXISTS idx_template_ratings_template_id ON template_ratings(template_id);
CREATE INDEX IF NOT EXISTS idx_template_ratings_user_id ON template_ratings(user_id);

-- ==========================================
-- 13. ÊïèÊÑüËØçË°®
-- ==========================================

CREATE TABLE IF NOT EXISTS sensitive_words (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    word VARCHAR(100) NOT NULL UNIQUE,
    category VARCHAR(50),
    severity VARCHAR(20) NOT NULL DEFAULT 'medium',
    is_active BOOLEAN NOT NULL DEFAULT 1,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX IF NOT EXISTS idx_sensitive_words_word ON sensitive_words(word);
CREATE INDEX IF NOT EXISTS idx_sensitive_words_category ON sensitive_words(category);
CREATE INDEX IF NOT EXISTS idx_sensitive_words_is_active ON sensitive_words(is_active);

-- ==========================================
-- 14. ÂÆ°ËÆ°Êó•ÂøóË°®
-- ==========================================

CREATE TABLE IF NOT EXISTS audit_logs (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER,
    action VARCHAR(50) NOT NULL,
    resource_type VARCHAR(50) NOT NULL,
    resource_id INTEGER,
    details TEXT,
    ip_address VARCHAR(50),
    user_agent TEXT,
    status VARCHAR(20) NOT NULL DEFAULT 'success',
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL
);

CREATE INDEX IF NOT EXISTS idx_audit_logs_user_id ON audit_logs(user_id);
CREATE INDEX IF NOT EXISTS idx_audit_logs_action ON audit_logs(action);
CREATE INDEX IF NOT EXISTS idx_audit_logs_resource_type ON audit_logs(resource_type);
CREATE INDEX IF NOT EXISTS idx_audit_logs_created_at ON audit_logs(created_at);

-- ==========================================
-- 15. ÁΩëÁ´ôËÆæÁΩÆË°®
-- ==========================================

CREATE TABLE IF NOT EXISTS site_settings (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    site_name VARCHAR(100) NOT NULL DEFAULT 'AI Prompt Lab',
    site_description TEXT,
    allow_registration BOOLEAN NOT NULL DEFAULT 1,
    require_email_verification BOOLEAN NOT NULL DEFAULT 0,
    max_prompts_per_user INTEGER NOT NULL DEFAULT 1000,
    max_api_configs_per_user INTEGER NOT NULL DEFAULT 10,
    enable_template_library BOOLEAN NOT NULL DEFAULT 1,
    enable_ab_testing BOOLEAN NOT NULL DEFAULT 1,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- ==========================================
-- ÂàùÂßãÊï∞ÊçÆ
-- ==========================================

-- ÊèíÂÖ•ÈªòËÆ§ÁΩëÁ´ôËÆæÁΩÆ
INSERT OR IGNORE INTO site_settings (id, site_name, site_description)
VALUES (1, 'AI Prompt Lab', '‰∏ì‰∏öÁöÑ AI ÊèêÁ§∫ËØçÁÆ°ÁêÜÂíåÊµãËØïÂπ≥Âè∞');

-- ÊèíÂÖ•ÈªòËÆ§ÁÆ°ÁêÜÂëòË¥¶Êà∑
-- Áî®Êà∑Âêç: admin
-- ÂØÜÁ†Å: admin123 (ËØ∑Âú®Áîü‰∫ßÁéØÂ¢É‰∏≠Á´ãÂç≥‰øÆÊîπ!)
-- ÂØÜÁ†ÅÂìàÂ∏åÊòØ‰ΩøÁî® bcrypt ÁîüÊàêÁöÑ "admin123"
INSERT OR IGNORE INTO users (id, username, email, hashed_password, full_name, role, is_active)
VALUES (
    1, 
    'admin', 
    'admin@aipromptlab.com', 
    '$2b$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LewY5GyYIvAprzm3u',
    'Á≥ªÁªüÁÆ°ÁêÜÂëò',
    'admin',
    1
);

-- ÊèíÂÖ•ÈªòËÆ§Ê®°ÊùøÂàÜÁ±ª
INSERT OR IGNORE INTO template_categories (id, name, name_en, description, icon, sort_order)
VALUES 
    (1, 'ÊñáÊ°àÂàõ‰Ωú', 'Copywriting', 'ÂêÑÁ±ªÊñáÊ°à„ÄÅÂπøÂëä„ÄÅËê•ÈîÄÂÜÖÂÆπÂàõ‰Ωú', '‚úçÔ∏è', 1),
    (2, '‰ª£Á†ÅÂºÄÂèë', 'Coding', '‰ª£Á†ÅÁîüÊàê„ÄÅË∞ÉËØï„ÄÅ‰ºòÂåñÁõ∏ÂÖ≥', 'üíª', 2),
    (3, 'Êï∞ÊçÆÂàÜÊûê', 'Data Analysis', 'Êï∞ÊçÆÂ§ÑÁêÜ„ÄÅÂàÜÊûê„ÄÅÂèØËßÜÂåñ', 'üìä', 3),
    (4, 'ÊïôËÇ≤ÂüπËÆ≠', 'Education', 'ÊïôÂ≠¶„ÄÅÂüπËÆ≠„ÄÅÂ≠¶‰π†Áõ∏ÂÖ≥', 'üìö', 4),
    (5, 'ÂïÜ‰∏öÂàÜÊûê', 'Business', 'ÂïÜ‰∏öÁ≠ñÁï•„ÄÅÂ∏ÇÂú∫ÂàÜÊûê', 'üíº', 5),
    (6, 'ÂàõÊÑèËÆæËÆ°', 'Creative', 'ÂàõÊÑèÊûÑÊÄù„ÄÅËÆæËÆ°ÁÅµÊÑü', 'üé®', 6);

-- ÊèíÂÖ•Á§∫‰æãÊ®°Êùø
INSERT OR IGNORE INTO prompt_templates (
    id, category_id, title, description, content, 
    difficulty, is_official, is_featured, use_count
)
VALUES 
    (
        1, 1, '‰∏ì‰∏öÊñáÊ°£ÁøªËØëÂä©Êâã', 
        'È´òË¥®ÈáèÁöÑ‰∏ì‰∏öÊñáÊ°£ÁøªËØëÔºå‰øùÊåÅÂéüÊñáÊ†ºÂºèÂíå‰∏ì‰∏öÊúØËØ≠',
        '‰Ω†ÊòØ‰∏Ä‰Ωç‰∏ì‰∏öÁöÑÁøªËØë‰∏ìÂÆ∂„ÄÇËØ∑Â∞Ü‰ª•‰∏ã{{source_language}}ÊñáÊú¨ÁøªËØëÊàê{{target_language}}ÔºåË¶ÅÊ±ÇÔºö\n1. ‰øùÊåÅ‰∏ì‰∏öÊúØËØ≠ÁöÑÂáÜÁ°ÆÊÄß\n2. ‰øùÊåÅÂéüÊñáÁöÑÊ†ºÂºèÂíåÁªìÊûÑ\n3. ÁøªËØëË¶ÅÊµÅÁïÖËá™ÁÑ∂\n4. ÂøÖË¶ÅÊó∂Ê∑ªÂä†Ê≥®ÈáäËØ¥Êòé\n\nÂéüÊñáÔºö\n{{text}}',
        'beginner', 1, 1, 0
    ),
    (
        2, 1, 'Slogan ÂàõÊÑèÁîüÊàêÂô®',
        '‰∏∫ÂìÅÁâåÊàñ‰∫ßÂìÅÂàõÂª∫Âê∏Âºï‰∫∫ÁöÑ Slogan',
        '‰Ω†ÊòØ‰∏Ä‰ΩçËµÑÊ∑±ÁöÑÂìÅÁâåËê•ÈîÄ‰∏ìÂÆ∂„ÄÇËØ∑‰∏∫‰ª•‰∏ã‰∫ßÂìÅ/ÂìÅÁâåÂàõ‰Ωú 5 ‰∏™Âê∏Âºï‰∫∫ÁöÑ SloganÔºö\n\n‰∫ßÂìÅ/ÂìÅÁâåÂêçÁß∞Ôºö{{product_name}}\nÁõÆÊ†áÂèó‰ºóÔºö{{target_audience}}\nÊ†∏ÂøÉÂçñÁÇπÔºö{{key_features}}\nÂìÅÁâåË∞ÉÊÄßÔºö{{brand_tone}}\n\nË¶ÅÊ±ÇÔºö\n1. ÁÆÄÊ¥ÅÊúâÂäõÔºåÊòì‰∫éËÆ∞ÂøÜ\n2. Á™ÅÂá∫‰∫ßÂìÅÊ†∏ÂøÉ‰ª∑ÂÄº\n3. Á¨¶ÂêàÁõÆÊ†áÂèó‰ºóÂñúÂ•Ω\n4. ‰ΩìÁé∞ÂìÅÁâåÁã¨ÁâπÊÄß',
        'beginner', 1, 1, 0
    ),
    (
        3, 2, '‰ª£Á†ÅÂÆ°Êü•Âä©Êâã',
        'Â∏ÆÂä©ÂèëÁé∞‰ª£Á†Å‰∏≠ÁöÑÈóÆÈ¢òÂíåÊîπËøõÂª∫ËÆÆ',
        '‰Ω†ÊòØ‰∏Ä‰ΩçÁªèÈ™å‰∏∞ÂØåÁöÑ‰ª£Á†ÅÂÆ°Êü•‰∏ìÂÆ∂„ÄÇËØ∑ÂÆ°Êü•‰ª•‰∏ã{{language}}‰ª£Á†ÅÔºåÊèê‰æõËØ¶ÁªÜÁöÑÂèçÈ¶àÔºö\n\n‰ª£Á†ÅÔºö\n```{{language}}\n{{code}}\n```\n\nËØ∑‰ªé‰ª•‰∏ãËßíÂ∫¶ËøõË°åÂÆ°Êü•Ôºö\n1. ‰ª£Á†ÅË¥®ÈáèÂíåÂèØËØªÊÄß\n2. ÊΩúÂú®ÁöÑ bug ÂíåÈîôËØØ\n3. ÊÄßËÉΩ‰ºòÂåñÂª∫ËÆÆ\n4. ÂÆâÂÖ®ÊÄßÈóÆÈ¢ò\n5. ÊúÄ‰Ω≥ÂÆûË∑µÂª∫ËÆÆ',
        'intermediate', 1, 1, 0
    ),
    (
        4, 3, 'Êï∞ÊçÆÂàÜÊûêÊä•ÂëäÁîüÊàê',
        'Ê†πÊçÆÊï∞ÊçÆÁîüÊàê‰∏ì‰∏öÁöÑÂàÜÊûêÊä•Âëä',
        '‰Ω†ÊòØ‰∏Ä‰Ωç‰∏ì‰∏öÁöÑÊï∞ÊçÆÂàÜÊûêÂ∏à„ÄÇËØ∑Ê†πÊçÆ‰ª•‰∏ãÊï∞ÊçÆÁîüÊàê‰∏Ä‰ªΩËØ¶ÁªÜÁöÑÂàÜÊûêÊä•ÂëäÔºö\n\nÊï∞ÊçÆ‰∏ªÈ¢òÔºö{{topic}}\nÊï∞ÊçÆÊëòË¶ÅÔºö{{data_summary}}\nÂàÜÊûêÁõÆÊ†áÔºö{{goals}}\n\nËØ∑ÂåÖÂê´Ôºö\n1. Êï∞ÊçÆÊ¶ÇËßà\n2. ÂÖ≥ÈîÆÂèëÁé∞\n3. Ë∂ãÂäøÂàÜÊûê\n4. Ê¥ûÂØüÂíåÂª∫ËÆÆ\n5. ÂèØËßÜÂåñÂª∫ËÆÆ',
        'intermediate', 1, 1, 0
    ),
    (
        5, 4, '‰∏™ÊÄßÂåñÂ≠¶‰π†ËÆ°Âàí',
        '‰∏∫Â≠¶‰π†ËÄÖÂà∂ÂÆö‰∏™ÊÄßÂåñÁöÑÂ≠¶‰π†Ë∑ØÂæÑ',
        '‰Ω†ÊòØ‰∏Ä‰ΩçÁªèÈ™å‰∏∞ÂØåÁöÑÊïôËÇ≤È°æÈóÆ„ÄÇËØ∑‰∏∫‰ª•‰∏ãÂ≠¶‰π†ËÄÖÂà∂ÂÆö‰∏Ä‰ªΩËØ¶ÁªÜÁöÑÂ≠¶‰π†ËÆ°ÂàíÔºö\n\nÂ≠¶‰π†ÁõÆÊ†áÔºö{{learning_goal}}\nÂΩìÂâçÊ∞¥Âπ≥Ôºö{{current_level}}\nÂèØÁî®Êó∂Èó¥Ôºö{{available_time}}\nÂ≠¶‰π†ÂÅèÂ•ΩÔºö{{learning_style}}\n\nËØ∑Êèê‰æõÔºö\n1. Â≠¶‰π†Ë∑ØÂæÑËßÑÂàí\n2. ÂàÜÈò∂ÊÆµÁõÆÊ†á\n3. Êé®ËçêËµÑÊ∫ê\n4. Â≠¶‰π†ÊñπÊ≥ïÂª∫ËÆÆ\n5. ËøõÂ∫¶Ê£ÄÊü•ÁÇπ',
        'beginner', 1, 0, 0
    );

-- ==========================================
-- ÂÆåÊàê‰ø°ÊÅØ
-- ==========================================

-- Êü•ËØ¢ÁªüËÆ°‰ø°ÊÅØ
SELECT 
    'Êï∞ÊçÆÂ∫ìÂàùÂßãÂåñÂÆåÊàêÔºÅ' as message,
    (SELECT COUNT(*) FROM sqlite_master WHERE type='table') as total_tables,
    (SELECT COUNT(*) FROM users) as total_users,
    (SELECT COUNT(*) FROM template_categories) as total_categories,
    (SELECT COUNT(*) FROM prompt_templates) as total_templates;

